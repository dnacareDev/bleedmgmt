<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digitalresource.Mapper.ResourceNameMapper">
    <select id="CountResourceNameByCrop" resultType="int">
        SELECT COUNT(*)
        FROM resource_name
        WHERE resource_name = #{resource_name}
    </select>

    <select id="getCountResourceNameByCrop" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM resource_name r JOIN ON resource_crop_name c
        WHERE c.crop_id = #{crop_id}
          AND r.resource_name = #{resource_name}
    </select>

<!--    이름으로 자원 관리 이름 찾기-->
    <select id="selectResourceName" parameterType="String" resultType="ResourceName">
        SELECT * FROM resource_name WHERE resource_name = #{resource_name} AND user_group = #{group}
    </select>

<!--    자원 관리 이름 생성-->
    <insert id="registResourceName" parameterType="ResourceName" useGeneratedKeys="true" keyProperty="resource_name_id">
        INSERT INTO resource_name(
            resource_name
        )
        VALUE(
            #{resource_name}
        )
    </insert>

<!--    자원 관리 이름과 작물의 관계 생성-->
    <insert id="registResourceCropName" parameterType="Map">
        INSERT INTO resource_crop_name(
            crop_id,
            resource_name_id
        )
        VALUE(
            #{crop_id},
            #{resource_name_id}
        )
    </insert>

<!--    자원 관리 삭제시 연관된 데이터 삭제-->
    <delete id="deleteResourceCropName" parameterType="Map">
        DELETE FROM resource_crop_name
        WHERE crop_id = #{crop_id} AND resource_name_id = #{resource_name_id}
    </delete>

<!--    자원 관리 삭제시 사용되는 자원관리 이름이 더 이상 없는 경우 삭제-->
    <delete id="deleteResourceName" parameterType="int">
        DELETE FROM resource_name
        WHERE resource_name_id = #{resource_name_id}
    </delete>

    <delete id="deleteResourceCropByResourceName" parameterType="int">
        DELETE FROM resource_crop_name
        WHERE resource_name_id = #{resource_name_id}
    </delete>

    <update id="modifyResourceCropByResource" parameterType="Map">
        UPDATE resource_crop_name SET
        resource_name_id = #{new_name_id}
        WHERE crop_id = #{crop_id} AND resource_name_id = #{resource_name_id}
    </update>
    
    <select id="confirmResourceName" resultType="int">
    	select count(*) from resource_name rn inner join resource r on r.resource_name_id = rn.resource_name_id inner join crop c on c.crop_id= r.crop_id
		where c.crop_id = #{crop_id} and rn.resource_name = #{resource_name} and rn.user_group = #{user_group}
    </select>
    
    <select id="featureHeadList" resultType="feature">
    	select feature_num , feature_name, feature_file, feature_origin_file from feature where feature_group =(select feature_group from trait where trait_id = #{feature_group}) group by feature_num, feature_name;
    </select>
    
    <insert id="insertResource_name" useGeneratedKeys="true" keyProperty="resource_name_id">
    	insert into resource_name(resource_name, resource_group, user_group)
    	values(#{resource_name},
    	(select * from (select ifnull ((select distinct resource_group from resource_name right join (select '') a on resource_name = #{resource_name} ) , (select max(resource_group)+1 from resource_name ))from dual) a), #{user_group}
    	);
    </insert>

    <select id="SelectResourceNameId" resultType="int">
        SELECT resource_name_id FROM resource_name
        WHERE resource_name = #{resource_name}
    </select>

</mapper>