<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digitalresource.Mapper.ResourceMapper">

    <!--    사용되는 자원 관리 이름 갯수-->
    <select id="getCountResourceName" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM resource
        WHERE resoucre_name_id = #{resource_name_id}
    </select>

    <select id="selectResourceById" parameterType="int" resultType="Resource">
        SELECT *
        FROM resource
        WHERE resource_id = #{resource_id}
    </select>

    <delete id="deleteResourceByCropCategory" parameterType="int">
        DELETE
        FROM resource
        WHERE crop_id IN
              (SELECT crop_id FROM crop WHERE category_id = #{category_id})
    </delete>

    <delete id="deleteResourceByCrop" parameterType="int">
        DELETE
        FROM resource
        WHERE crop_id = #{crop_id}
    </delete>
	  
    <delete id="deleteResource" parameterType="int">
        update resource
        set resource_use = 0
        where resource_id in (
            select resource_id
            from (
                     select resource_id
                     from resource
                     where resource_id in (${resource_name})) a)
    </delete>

	<!-- 2022-06-23 | 삭제처리 ===================================================================== -->
	<!-- 주의! mysql에서는 delete, update시 서브쿼리에 동일한 테이블을 직접 참조하지 못한다. ======================= -->
	<!-- 해결하려면 임시테이블을 만들거나, 아예 서브쿼리를 쓰지않도록 해야한다(resource_id가 같으니 서브쿼리 삭제 가능) ====== -->
	<delete id="deleteResourceNameById" parameterType="int">
		DELETE 
		FROM resource_name
		WHERE resource_name_id in (
			SELECT resource_name_id 
			FROM resource
			WHERE resource_id = #{resourceId}
		)
	</delete>
	
	<delete id="deleteBreedById" parameterType="int">
		DELETE
		FROM breed
		WHERE resource_id = #{resourceId}
	</delete>
	
	<delete id="deleteResourceById" parameterType="int">
		DELETE
		FROM resource
		WHERE resource_id = #{resourceId}
		
	</delete>
	<!-- ===================================================================================== -->

    <insert id="insertResource" useGeneratedKeys="true" keyProperty="resource_id">
        insert into resource(resource_name_id, crop_id,
        <if test="trait_id != ''">
            trait_id,
        </if>
        <if test="resource_template != ''">
            resource_template,
        </if>
        <if test="resource_character_template_file != ''">
            resource_character_template_file,
        </if>
        resource_use, create_date, detail_count, user_group)
        values(#{resource_name_id}, #{crop_id},
        <if test="trait_id != ''">
            #{trait_id},
        </if>
        <if test="resource_template != ''">
            #{resource_template},
        </if>
        <if test="resource_character_template_file != ''">
            #{resource_character_template_file},
        </if>
        1,
        now(), #{detail_count}, #{user_group});
    </insert>

    <insert id="registerDetail">
        insert into detail(resource_id, detail_type, detail_name, detail_index, detail_info, detail_check, user_group, detail_click)
        values (#{resource_id}, #{detail_type}, #{detail_name}, #{detail_index}, #{detail_info}, #{detail_check}, #{user_group}, #{detail_click});
    </insert>

    <select id="searchResource" resultType="ResourceList">
        <!--  
        select r.*, rn.*, t.trait_description, c.crop_name, (if(resource_use = 1, '사용', '미사용')) as use_name
        from resource r
                 left join trait t on r.trait_id = t.trait_id
                 inner join crop c on c.crop_id = r.crop_id
                 inner join resource_name rn on rn.resource_name_id = r.resource_name_id
        where r.user_group = #{user_group} 
        ORDER BY r.resource_id DESC
        --> 
        select r.*, rn.*, c.crop_name, (if(resource_use = 1, '사용', '미사용')) as use_name
        from resource r
                 inner join crop c on c.crop_id = r.crop_id
                 inner join resource_name rn on rn.resource_name_id = r.resource_name_id
        where r.user_group = #{user_group} 
        ORDER BY r.resource_id DESC
    </select>
    
    <select id="searchResourceAll" resultType="ResourceAllList">
    	SELECT r.resource_id, r.resource_name_id, r.crop_id, r.create_date, rn.resource_name, rn.user_group 
    	FROM resource r LEFT JOIN resource_name rn ON r.resource_name_id = rn.resource_name_id
    	WHERE r.crop_id = #{crop_id} AND r.resource_use = 1
    </select>

    <select id="selectResourceCount" resultType="int">
        select count(*)
        from resource r
                 inner join trait t on r.trait_id = t.trait_id
                 inner join crop c on c.crop_id = r.crop_id
        where r.user_group = #{user_group}
    </select>

    <update id="changeResourceUse">
        update resource
        set resource_use = ${use_name}
        where resource_id = (select resource_id from (select resource_id from resource limit ${limit}, 1) as resurce_id);
    </update>

    <select id="resourceList" resultType="resourceName">
        select rn.*, r.crop_id
        from resource_name rn
        LEFT JOIN resource r ON r.resource_name_id = rn.resource_name_id
        WHERE r.resource_use != 0 AND r.user_group = #{group}
        group by rn.resource_name
    </select>

    <select id="SearchResourceId" resultType="int">
        SELECT resource_id
        FROM resource
        WHERE crop_id = #{crop_id}
        AND resource_name_id = #{resource_name_id}
        AND user_group = #{user_group}
    </select>
    
    <select id="SelectCropId" resultType="int">
        SELECT crop_id
        FROM resource
        WHERE resource_name_id = #{resource_name_id}
    </select>
    	
    <select id="SelectCropIdByResourceId" resultType="int">
    	SELECT crop_id
        FROM resource
        WHERE resource_id = #{resource_id}
    </select>

    <select id="searchResourceCount" resultType="int">
    	select count(*) from resource where crop_id = #{resource_id};
    </select>

    <select id="selectDetailHead" resultType="Detail">
        select d.detail_id, d.detail_name, d.detail_info, d.detail_display
        from resource r
                 inner join resource_name rn on rn.resource_name_id = r.resource_name_id
                 inner join detail d on d.resource_id = r.resource_id
        where rn.resource_name = #{resource_name}
          and r.crop_id = #{crop_id}
          and detail_info not in (4, 3)
          and detail_type = 2
    </select>

    <update id="detailDisplayAction">
        update detail
        set detail_display = ${detail_display}
        where detail_id in (${detail})
    </update>

    <select id="SelectCropCount" resultType="integer">
        SELECT SUM(rn.resource_name = #{resource_name} AND c.crop_name = #{crop_name}) AS count_crop
        FROM resource r
        INNER JOIN resource_name rn ON r.resource_name_id = rn.resource_name_id
        INNER JOIN crop c ON r.crop_id = c.crop_id
        INNER JOIN breed b ON b.resource_id = r.resource_id
        WHERE b.user_group = #{user_group} <!-- 미사용 관리자원 필터링 -->AND r.resource_use != 0
    </select>

    <select id="SelectCropMonth" resultType="monthcount">
        <!--
        SELECT resource_name, count(resource_name) AS resource_count, DATE_FORMAT(create_date, '%m') AS mon
        FROM resource_name rn
        INNER JOIN breed b on rn.resource_name_id = b.resource_id
        WHERE b.variety_name = #{crop_name}
          AND DATE_FORMAT(create_date, '%m') = #{month}
          AND DATE_FORMAT(create_date, '%Y') = #{year}
          AND resource_name = #{resource_name}
          AND b.user_group = #{user_group}
        group by resource_name;
        -->
        <!-- 미사용 관리자원 필터링 -->
        SELECT resource_name, count(resource_name) AS resource_count, DATE_FORMAT(b.create_date, '%m') AS mon
        FROM resource_name rn
        INNER JOIN breed b on rn.resource_name_id = b.resource_id
        INNER JOIN resource r on rn.resource_name_id = r.resource_name_id
        WHERE b.variety_name = #{crop_name}
          AND DATE_FORMAT(b.create_date, '%m') = #{month}
          AND DATE_FORMAT(b.create_date, '%Y') = #{year}
          AND resource_name = #{resource_name}
          AND b.user_group = #{user_group}
          AND r.resource_use != 0
        group by resource_name;
    </select>
    
    <select id="SelectCropYear" resultType="yearcount">
        SELECT resource_name, count(resource_name) AS resource_count, DATE_FORMAT(create_date, '%Y') AS year
        FROM resource_name rn
        INNER JOIN breed b on rn.resource_name_id = b.resource_id
        WHERE b.variety_name = #{crop_name}
          AND DATE_FORMAT(create_date, '%Y') = #{year}
          AND resource_name = #{resource_name}
          AND b.user_group = #{user_group}
        group by resource_name;
    </select>

    <select id="SelectDetailInfo" resultType="HashMap">
        SELECT detail_info, detail_display
        FROM detail
        WHERE detail_id = #{item.detail_id}
    </select>

    <select id="SelectResourceUse" resultType="int">
        SELECT resource_use
        FROM resource
        WHERE resource_id = #{resource_id}
    </select>

    <update id="UpdateResourceUse">
        UPDATE resource
        SET resource_use = #{resource_use}
        WHERE resource_id = #{resource_id}
    </update>
    
    <update id="UpdateDeleteCheck">
    	UPDATE resource
    	SET delete_check = 1
    	WHERE resource_id = #{resource_id}
    </update>
</mapper>